import {DictionaryType} from './DictionaryType';

export const DicProductFields : DictionaryType = {
  iw: {
    id: 'קוד מוצר במערכת',
    name: 'שם מוצר',
    catalogNumS: 'מס. קטלוגי (ספק)',
    catalogNumC: 'מס. קטלוגי (לקוח)',
    category: 'קטגוריה',
    barcode: 'ברקוד',
    description: 'תיאור מוצר',
    type: 'יחידות',
    unitWeight: 'משקל יחידה (ק"ג)',
    orderMin: 'כמות הזמנה מינימלית',
    tara: 'משקל אריזה (ק"ג)',
    isVeg: 'פרי \\ ירק',
    minPrice: 'מחיר מינימלי',
    maxPrice: 'מחיר מקסימלי',
    orderWeightTolerance: 'אפיצות משקל בהזמנה (%)',
    receiveWeightTolerance: 'אפיצות משקל בקבלה (%)',
    amount: 'כמות בהזמנה',
    price: 'מחיר',
    priceInOrder: 'מחיר סופי',
    comment: 'הערת לקוח',
    boxes: 'מס. ארגזים',
    finalWeight: 'משקל בקבלה (ק"ג)',
    isManualWeight: 'התקבל ללא שקילה',
    isWeightMatch: 'משקל תואם',
    amountReturned: 'כמות שהוחזרה',
    weightGap: 'פער במשקל (ק"ג)',
  },
  en: {
    id: 'Product system ID',
    name: 'Product name',
    catalogNumS: 'Catalog no. (supplier)',
    catalogNumC: 'Catalog no. (customer)',
    category: 'Category',
    barcode: 'Barcode',
    description: 'Product description',
    type: 'Unit',
    unitWeight: 'Unit weight (kg)',
    orderMin: 'Min. order amount',
    tara: 'Tara weight',
    isVeg: 'Fruit / Veg.',
    minPrice: 'Min price',
    maxPrice: 'Max price',
    orderWeightTolerance: 'Order weight tolerance (%)',
    receiveWeightTolerance: 'Reception weight tolerance (%)',
    amount: 'Order amount',
    price: 'Price',
    priceInOrder: 'Final price',
    comment: 'Customer comment',
    boxes: 'No. of boxes',
    finalWeight: 'Reception weight (kg)',
    isManualWeight: 'Not weighed in reception',
    isWeightMatch: 'Weight match',
    amountReturned: 'Amount returned',
    weightGap: 'Weight gap (kg)'
  }
};
