/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

// Hebrew Open Sans fonts
@import url('https://fonts.googleapis.com/earlyaccess/opensanshebrew.css');
@import url('https://fonts.googleapis.com/earlyaccess/opensanshebrewcondensed.css');

// Import angular material styles
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

body {
  font-family: 'Open Sans Hebrew', serif;
}

// The app's background
ion-content {--background: url('/assets/background.png') top/100% 100% no-repeat}

// Headers *without* border and shadow
ion-header:after {content: none !important}

// Main rules for all buttons
ion-button, ion-fab-button {
  --box-shadow: none;         // No shadow
}

// No arrows in input of type number
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type=number] {
  -moz-appearance: textfield;
}

// No clear button in inputs of type time
input[type="time"]::-webkit-clear-button {
  display: none;
}
input[type="time"]::-ms-clear {
  display: none;
}

// Contains all main content of the page
.page-container {
  max-width: 1000px;
  margin: auto;
}
.page-container > * {margin: auto}

// An only icon button. Icon is orange, with dark rounded border
.small-circle-btn {
  height: 1.7em !important;
  width: 1.7em !important;
  margin: 0;
  --padding-end: 0;
  --padding-start: 0;
  --border-width: 2px;
  --border-style: solid;
  --border-color: var(--ion-color-dark);
  --border-radius: 50%;
  ion-icon {color: var(--ion-color-secondary)}
}

// Search bar styling + search icon (need to add inside)
ion-searchbar {
  width: 60% !important;
  --box-shadow: none !important;
  --icon-color: transparent !important;
  .searchbar-input {
    height: 3em !important;
    border-radius: 1.75em !important;
    border: solid var(--ion-color-medium) 1px !important;
  }
}
ion-searchbar > ion-icon {
  position: absolute;
  z-index: 1;
  left: 0;
  padding-left: 2em;
  width: 1.5em;
  height: 1.5em;
}
ion-searchbar:focus-within > ion-icon {
  height: 0;
  display: none;
}

// Checkbox style
ion-checkbox {
  --background: transparent;
  --background-checked: transparent;
  --checkmark-color: var(--ion-color-dark);
  --border-color-checked: var(--ion-color-dark);
  --checkmark-width: 4px;
  --border-radius: 3px;
}

//// Select box
//html[dir="rtl"] {.select-container:after {left: 0}}
//html[dir="ltr"] {.select-container:after {right: 0}}
//.select-container {
//  border-radius: 1em;
//  background-color: white;
//  display: flex;
//  align-items: center;
//  position: relative;
//  &:after {
//    position: absolute;
//    content: "▼";
//    color: var(--ion-color-dark);
//    padding: 0 1em;
//    transform: scaleX(1.5);
//    pointer-events: none;
//  }
//  ion-text {
//    position: absolute;
//    padding: 0 1em;
//    color: var(--ion-color-medium);
//    user-select: none;
//    pointer-events: none;
//  }
//  select {
//    display: block;
//    margin: auto;
//    width: calc(100% - 2em);
//    height: 2em;
//    background-color: transparent;
//    border: none;
//    outline: none;
//    cursor: pointer;
//    appearance: none;
//    option:first-child {
//      cursor: pointer;
//      color: var(--ion-color-medium);
//    }
//  }
//}

ion-grid.app-table {
  ion-row > ion-col {
    display: flex;
    align-items: center;
    &:first-child {
      justify-content: center;
      ion-button {
        height: 1.5em;
        width: 1.5em;
      }
    }
    ion-img {
      height: 1.5em;
      width: 1.5em;
      object-fit: cover;
      border: solid var(--ion-color-medium) 1px;
      padding: 1px;
    }
    ion-button {
      height: 2em;
    }
  }

  ion-row:first-child {
    color: var(--ion-color-primary);
    font-weight: bold;
    border-bottom: solid black 3px;
  }
}


// Alerts messages settings
.alert-wrapper {
  * {
    font-size: x-large !important;
  }
  --background: white;
  --max-width: 500px;
  --width: 500px;
  .alert-head {
    padding: 0;
    h2 {
      text-align: center;
      font-weight: bold;
      padding: 0.5em 1em;
      &:first-child {
        margin: 0 !important;
        font-size: xx-large !important;
        color: var(--ion-color-primary);
        background-color: var(--ion-color-light-shade);
      }
      &:last-child {
        margin-top: 1em;
      }
    }
  }
  .alert-message {
    text-align: center;
    color: black;
    padding-bottom: 0;
  }
  .alert-button-group {
    display: flex;
    justify-content: space-evenly;
    margin: 1em auto;
    .alert-button {
      background-color: var(--ion-color-secondary);
      border-radius: 1em;
      color: white;
      min-width: 5em;
      height: 1.5em !important;
      span {
        justify-content: center;
      }
    }
  }
}

// Ion select inside a div.select-box
.select-box {
  border: solid var(--ion-color-medium) 1px;
  border-radius: 2em;
  background-color: white;
  padding: 0 1em;
  ion-select {
    display: flex;
    justify-content: flex-end;
    &:after {
      content: "▼";
      position: absolute;
      color: var(--ion-color-dark);
      transform: scaleX(1.5);
      pointer-events: none;
    }
  }
}
// A class for the ion-select popover. the custom width is defined by the width of the ion-select through appSelectPopover directive
// The ion-select in the app should be like this:
// <ion-select interface="popover" placeholder="Some placeholder (must)" mode="md" [interfaceOptions]="{cssClass: 'select-popover', animated: false, showBackdrop: false}" appSelectPopover>
.select-popover {
  --width: var(--custom-popover-width);
  --box-shadow: none;
  ion-radio {
    opacity: 0;
  }
  ion-list {
    padding: 0;
    border: solid var(--ion-color-medium) 1px;
  }
}
