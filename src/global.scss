/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

// Hebrew Open Sans fonts
@import url('https://fonts.googleapis.com/earlyaccess/opensanshebrew.css');
@import url('https://fonts.googleapis.com/earlyaccess/opensanshebrewcondensed.css');

// The app's background
ion-content {--background: url('/assets/background.png') top/100% 100% no-repeat}

// Headers *without* border and shadow
ion-header:after {content: none !important}

// Main rules for all buttons
ion-button, ion-fab-button {
  --box-shadow: none;         // No shadow
}

// No arrows in input of type number
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type=number] {
  -moz-appearance: textfield;
}

// Contains all main content of the page
.page-container {
  max-width: 1000px;
  margin: auto;
  //display: flex;
  //justify-content: center;
  //align-items: center;
}
.page-container > * {margin: auto}

// An only icon button. Icon is orange, with dark rounded border
.small-circle-btn {
  height: 1.7em;
  width: 1.7em;
  margin: 0;
  --padding-end: 0;
  --padding-start: 0;
  --border-width: 2px;
  --border-style: solid;
  --border-color: var(--ion-color-dark);
  --border-radius: 50%;
  ion-icon {color: var(--ion-color-secondary)}
}

// Search bar styling + search icon (need to add inside)
ion-searchbar {
  width: 60% !important;
  --box-shadow: none !important;
  --icon-color: transparent !important;
  .searchbar-input {
    height: 3.5em !important;
    border-radius: 1.75em !important;
  }
}
ion-searchbar > ion-icon {
  position: absolute;
  z-index: 1;
  left: 0;
  padding-left: 2em;
  width: 2em;
  height: 2em;
}
ion-searchbar:focus-within > ion-icon {
  height: 0;
  display: none;
}

html[dir="rtl"] {.select-container:after {left: 0}}
html[dir="ltr"] {.select-container:after {right: 0}}
.select-container {
  border-radius: 1em;
  background-color: white;
  display: flex;
  align-items: center;
  position: relative;
  &:after {
    position: absolute;
    content: "â–¼";
    color: var(--ion-color-dark);
    padding: 0 1em;
    transform: scaleX(1.5);
    pointer-events: none;
  }
  ion-text {
    position: absolute;
    padding: 0 1em;
    color: var(--ion-color-medium);
    user-select: none;
    pointer-events: none;
  }
  select {
    display: block;
    margin: auto;
    width: calc(100% - 2em);
    height: 2em;
    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;
    appearance: none;
    option:first-child {
      cursor: pointer;
      color: var(--ion-color-medium);
    }
  }
}
